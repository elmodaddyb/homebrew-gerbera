# Inspired from the .travis.yml in GitHub repos
# davidchall/homebrew-hep and touist/homebrew-touist
language: ruby
rvm: system

cache:
  directories:
    - $HOME/Library/Caches/Homebrew
    - /usr/local/Homebrew/Library/Homebrew/vendor/bundle
    - /usr/local/Homebrew/Library/Homebrew/vendor/portable-ruby

matrix:
  include:
    - os: osx
      osx_image: xcode9.4
      env: OSX=10.13
    - os: osx
      osx_image: xcode9.2
      env: OSX=10.12

before_install:
  # IMPORTANT STEP: link the tap inside brew to our current travis-cloned tap
  # Step: 1) create the intermediate folders <user>/<repo> so that
  # we can 2) remove <repo> and 3) replace it with a sym link
  # that will point to the travis build folder.
  # If we don't do that, the tap be cloned using the default master
  # branch, and thus we cannot test our tap at the current pushed commit.
  # We also need to unshallow in 4) because sometimes travis does not
  # clone thouroughly but we need a deep clone.
  - export TRAVIS_COMMIT="$(git rev-parse --verify -q HEAD)"
  # 4)
  - if [ -f ".git/shallow" ]; then
      travis_retry git fetch --unshallow;
    fi
  - HOMEBREW_REPOSITORY="$(brew --repo)"
  - sudo chown -R "$USER" "$HOMEBREW_REPOSITORY"
  - git -C "$HOMEBREW_REPOSITORY" reset --hard origin/master
  - brew update || brew update
  - HOMEBREW_TAP_DIR="$(brew --repo "$TRAVIS_REPO_SLUG")"
  - mkdir -p "$HOMEBREW_TAP_DIR" # 1)
  - rm -rf "$HOMEBREW_TAP_DIR" # 2)
  - ln -s "$PWD" "$HOMEBREW_TAP_DIR" # 3)
  - export HOMEBREW_DEVELOPER="1"
  - ulimit -n 1024

script:
  - brew test-bot
  - if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
      brew test-bot --ci-testing;
    else
      brew test-bot --ci-pr;
    fi

before_cache:
  # Scrub cache so that travis only caches stuff for installed formulae.
  - brew cleanup -
